{
	"$schema": "http://json-schema.org/draft-06/schema#",
	"title": "Intern",
	"description": "Intern 4 JSON Schema",
	"type": "object",
	"definitions": {
		"config": {
			"type": "object",

			"properties": {
				"bail": {
					"description": "cause Intern to stop running tests after the first failure",
					"type": "boolean"
				},

				"basePath": {
					"description": "The path to the project base",
					"type": "string"
				},

				"baseline": {
					"type": "boolean"
				},

				"benchmark": {
					"description": "include hooks required by benchmark tests",
					"type": "boolean"
				},

				"benchmarkConfig": {
					"type": "object"
				},

				"coverage": {
					"$ref": "#/definitions/listOrString"
				},

				"coverageVariable": {
					"description": "The global variable that will be used to store coverage data",
					"type": "string"
				},

				"debug": {
					"description": "intern will emit internal log events that can be picked up by reporters",
					"type": "boolean"
				},

				"defaultTimeout": {
					"description": "the number of milliseconds that Intern will wait for an asynchronous test to complete before timing out",
					"type": "integer"
				},

				"description": {
					"description": "A description for this test run",
					"type": "string"
				},

				"environments": {
					"$ref": "#/definitions/environment"
				},

				"filterErrorStack": {
					"description": "filter external library calls and runtime calls out of error stacks",
					"type": "boolean"
				},

				"grep": {
					"description": "a regular expression that is used to filter which tests are run. Grep operates on test IDs.",
					"type": "string"
				},

				"internPath": {
					"description": "The path to Intern",
					"type": "string"
				},

				"loader": {
					"type": "object",
					"properties": {
						"script": {
							"type": "string"
						},
						"options": {
							"type": "object"
						}
					}
				},

				"name": {
					"description": "A top-level name for this configuration",
					"type": "string"
				},

				"reporters": {
					"description": "A list of reporter names or descriptors",
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"options": {
							"type": "object"
						}
					}
				},

				"requires": {
					"$ref": "#/definitions/listOrString",
					"description": "A list of scripts or modules to load before suites are loaded. These will be loaded with the external loader, if one has been configured."
				},

				"scripts": {
					"$ref": "#/definitions/listOrString",
					"description": "A list of scripts to load before any external loader is configured"
				},

				"sessionId": {
					"description": "An identifier for this test session",
					"type": "string"
				},

				"showConfig": {
					"description": "display the resolved config and exit",
					"type": "boolean"
				},

				"suites": {
					"description": "A list of paths or glob expressions that point to suite scripts",
					"$ref": "#/definitions/listOrString"
				},

				"tunnel": {
					"type": "string"
				}
			}
		},

		"configs": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/extensibleConfig"
			}
		},

		"environment": {
			"type": "object",
			"properties": {
				"browser": {
					"type": "string"
				},
				"browserName": {
					"type": "string"
				},
				"platform": {
					"$ref": "#/definitions/listOrString"
				},
				"version": {
					"$ref": "#/definitions/listOrString"
				}
			},
			"additionalProperties": {
				"type": "string"
			}
		},

		"extensibleConfig": {
			"$ref": "#/definitions/functionalConfig",
			"description": "Extensible Configuration",
			"properties": {
				"extends": {
					"type": "string"
				}
			}
		},

		"functionalConfig": {
			"$ref": "#/definitions/config",
			"description": "Configuration for functional tests",
			"properties": {
				"capabilities": {
					"type": "object",
					"description": "capabilities to be used for WebDriver sessions",
					"properties": {
						"fixSessionCapabilities": {
							"type": "string"
						},
						"idle-timeout": {
							"type": "integer"
						}
					}
				},

				"connectTimeout": {
					"description": "When running WebDriver tests, how long (in ms) to wait for a remote browser to connect",
					"type": "integer"
				},

				"functionalCoverage": {
					"description": "include coverage statistics generated by functional tests",
					"type": "boolean"
				},

				"functionalSuites": {
					"description": "Suites to run in WebDriver mode",
					"$ref": "#/definitions/listOrString"
				},

				"instrumenterOptions": {
					"description": "Options to pass to the code coverage instrumenter (Istanbul)",
					"type": "object"
				},

				"leaveRemoteOpen": {
					"description": "leave remote browsers open after testing has finished",
					"type": "boolean"
				},

				"maxConcurrency": {
					"description": "When running WebDriver tests, how may sessions to run at once",
					"type": "integer"
				},

				"runInSync": {
					"description": "remote executors will run in sync with the local Intern",
					"type": "boolean"
				},

				"serveOnly": {
					"description": "only start the server; don't run tests",
					"type": "boolean"
				},

				"serverPort": {
					"description": "The port the instrumenting server should listen on",
					"type": "integer"
				},

				"serverUrl": {
					"description": "A URL a remote executor can use to reach the local Intern",
					"type": "string"
				},

				"socketPort": {
					"description": "A port to use for a WebSocket connection from a remote session",
					"type": "string"
				},

				"tunnel": {
					"description": "The name of a tunnel to use for WebDriver tests",
					"type": "string"
				},

				"tunnelOptions": {
					"description": "Options to pass to the WebDriver tunnel",
					"type": "object"
				}
			}
		},

		"listOrString": {
			"anyOf": [
				{
					"type": "array",
					"items": {
						"type": "string"
					},
					"uniqueItems": true
				},
				{
					"type": "string"
				}
			]
		}
	},
	"$ref": "#/definitions/functionalConfig",
	"properties": {
		"browser": {
			"$ref": "#/definitions/functionalConfig"
		},
		"configs": {
			"$ref": "#/definitions/configs"
		},
		"node": {
			"$ref": "#/definitions/config"
		}
	}
}
